#!/bin/bash

# NOTE: Heroku Cedar stack on Ubuntu 10.04
#  gcc needs to be 4.3

# See http://cran.r-project.org/doc/manuals/R-admin.html for details on building R

set -e

rversion="$1"

if [ -z "$rversion" ]; then
  echo "USAGE: $0 VERSION"
  exit 1
fi

basedir="$( cd -P "$( dirname "$0" )" && pwd )"
vendordir=/app/vendor
prefix=$vendordir/R

# download dependancies
curl http://gfortran.com/download/x86_64/snapshots/gcc-4.3.tar.xz -o gcc-4.3.tar.xz
curl http://archive.ubuntu.com/ubuntu/pool/main/g/glibc/glibc_2.7.orig.tar.gz -o glibc_2.7.tar.gz

# download R sources and unpack
curl http://cran.r-project.org/src/base/R-2/R-$rversion.tar.gz -o R-$rversion.tar.gz
tar xzf R-$rversion.tar.gz

# create output directories
mkdir -p $vendordir
mkdir -p $prefix

cd $vendordir

# unpack dependancies (into vendor)
tar xJf $basedir/gcc-4.3.tar.xz

# patch gcc features.h file
# See http://permalink.gmane.org/gmane.comp.gcc.help/40166
cp $basedir/features.h $vendordir/gcc-4.3/lib/gcc/x86_64-unknown-linux-gnu/4.3.6/include-fixed/features.h

tar xzf $basedir/glibc_2.7.tar.gz && tar xjf $vendordir/glibc-2.7/glibc-2.7.tar.bz2

# R needs to know where gfortran and glibc header files are
export PATH=$vendordir/gcc-4.3/bin:$PATH
export LDFLAGS="-L$vendordir/gcc-4.3/lib64/"
export CPPFLAGS="-I$vendordir/glibc-2.7/string/ -I$vendordir/glibc-2.7/time"

echo GCC Version: 4.3
echo PATH:     $PATH
echo LDFLAGS:  $LDFLAGS
echo CPPFLAGS: $CPPFLAGS

# configure and make R
cd $basedir/R-$rversion/

# ./configure --prefix=$prefix --without-x && make && make install
./configure --prefix=$prefix --without-x --enable-R-shlib && make && make install

# remove unneeded files to make the output smaller
cd $vendordir

shopt -s extglob

pushd glibc-2.7 && rm -rf !(string|time) && popd

rm -rf gcc-4.3/info
rm -rf gcc-4.3/man

rm -rf R/lib64/R/doc
rm     R/lib64/R/COPYING*
rm     R/lib64/R/NEWS*
rm     R/lib64/R/SVN-REVISION

# TODO: remove other unneeded files
