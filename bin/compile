#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# parse and derive params
BUILD_DIR=$1
CACHE_DIR="$2/vendor"
LP_DIR=`cd $(dirname $0); cd ..; pwd`

# config
BUILD_PACK_VERSION="20121005"
R_VERSION="2.15.1"
S3_BUCKET="heroku-buildpack-r"
R_BINARIES="http://${S3_BUCKET}.s3.amazonaws.com/R-${R_VERSION}-binaries-${BUILD_PACK_VERSION}.tar.gz"
VENDOR_DIR="$BUILD_DIR/vendor"
R_HOME="$VENDOR_DIR/R"
CRAN_MIRROR="http://cran.fhcrc.org"

mkdir -p $CACHE_DIR

# vendor R into the slug
echo "Vendoring R $R_VERSION" | indent

# Check if we can pull from cache rather than download tar
if [ "$(cat $CACHE_DIR/R/bin/.version 2>/dev/null)" = "$R_VERSION" ]
then
  echo "Desired R version ($R_VERSION) cached" | indent
  mkdir -p $VENDOR_DIR
  cp -R $CACHE_DIR/* $VENDOR_DIR
else
  # download and unpack binaries
  echo "Downloading and unpacking R binaries" | indent
  mkdir -p $VENDOR_DIR && curl $R_BINARIES -s -o - | tar xzf - -C $VENDOR_DIR
fi

# need to copy the binaries to /app/vendor so that R works
cp -R $VENDOR_DIR/* /app/vendor


# R needs to know where gfortran and glibc header files are
# For buildpacks that get run after, need to update PATH with location of R
export PATH=/app/vendor/R/bin/:/app/vendor/gcc-4.3/bin:$PATH
export LDFLAGS="-L/app/vendor/gcc-4.3/lib64/"
export CPPFLAGS="-I/app/vendor/glibc-2.7/string/ -I/app/vendor/glibc-2.7/time"
export R_INCLUDE=/app/vendor/R/lib64/R/include

# install dependencies from CRAN
echo "Executing init.r script" | indent
mkdir -p /app/vendor/R/lib64/R/doc/html

# set the CRAN mirror and run the init.r program
/app/vendor/R/bin/R -s --silent <<RPROG
  r <- getOption("repos");
  r["CRAN"] <- "$CRAN_MIRROR";
  options(repos=r);
  `cat $BUILD_DIR/init.r`
RPROG

echo "R $R_VERSION successfully installed" | indent

# need to copy binaries back so that any installed packages are included in the slug
rm -rf $VENDOR_DIR $CACHE_DIR
mkdir -p $VENDOR_DIR $CACHE_DIR
cp -R -f /app/vendor/* $VENDOR_DIR
cp -R -f /app/vendor/* $CACHE_DIR
echo "$R_VERSION" > $CACHE_DIR/R/bin/.version
